meta {
  -theme-display-name: 'Tomorrow Night Eighties Variant';
  -theme-interface-style: dark;
  -theme-accent-color: auto;
}

// Colors
$window_color: #202022;
$bg: #2d2d2d;
$gray0: #2d2d2f;
$gray1: #39393b;
$gray2: #515153;
$gray3: #999999;
$gray4: #b4b7b6;
$gray5: #ccccce;
$text_color: #e0e0e2;
$white: #fdfdff;
$red: #f2777a;
$orange: #f99157;
$yellow: #ffcc66;
$green: #99cc9b;
$cyan: #66cccc;
$blue: #6699ce;
$cyan-blue: #cc99cc;
$pink: #cc99ce;
$brown: #ed7554;

/*
 * Window styles
 */
meta.window {
  border-color: $gray1;
  background-color: $window_color;
}
meta.titlebar {
  color: $text_color;
  border-color: $bg;
  background-color: $window_color;
}
meta.titlebar.inactive {
  background-color: $gray1;
}

meta.button {
  background: linear-gradient($gray2, $gray1);
  border: $gray0;
  color: $text_color;
}
meta.button.highlighted {
  background: linear-gradient(lighten($gray2, 3%), lighten($gray1, 3%));
  color: white;
}
meta.button.selected {
  color: white;
}
meta.button.highlighted.selected {
  color: white;
}
meta.button.disabled {
}

meta.textfield {
  background-color: $gray0;
  border-color: $gray1;
}
meta.textfield.highlighted {
  background-color: $bg;
  border-color: hsl(210, 5%, 23%);
}

/*
 * Document styles
 */
meta.document {
  background-color: $bg;
  border-color: $gray2;
}

meta.document.button {
  background: linear-gradient($gray2, $gray1);
  border: $gray0;
}
meta.document.button.disabled {
  background: linear-gradient(hsla(220, 5%, 25%, 0.3), hsla(220, 5%, 21%, 0.3));
}
meta.document.button.highlighted {
  background: linear-gradient(lighten($gray2, 3%), lighten($gray1, 3%));
}

meta.document.textfield {
  background-color: $window_color;
  border-color: $gray1;
}
meta.document.textfield.highlighted {
  background-color: $window_color;
  border-color: hsl(210, 5%, 19%);
}

/* Text */
meta.text {
  color: $text_color;
}
meta.text.invisible {
  color: $gray2;
}
meta.text.selected {
  background-color: $gray2;
}

/* Cursor */
meta.cursor {
  background-color: $gray1;
}

/* Indentation Guides */
meta.indentguide {
  border-color: $gray2;
}

/* Gutter */
meta.gutter {
  color: $gray2;
}
meta.gutter.selected {
  background-color: $blue;
  color: white;
}

/*
 * Syntax styles
 */

keyword {
  color: $pink;
}
keyword.self {
  color: $red;
}

comment {
  color: $gray3;
}
processing {
  color: $pink;
}
declaration {
  color: $pink;
}
bracket {
  color: $text_color;
}

operator {
  color: $text_color;
}

keyword.operator {
  color: $pink;
}

invalid {
  background-color: rgba($red, 0.1); // Make red color very transparent
  color: white;
}
link {
  color: $blue;
}

/* Values */
value.boolean {
  color: $orange;
}
value.null {
  color: $orange;
}
value.number {
  color: $orange;
}
value.entity {
  color: $orange;
}
value.symbol {
  color: $orange;
}
type {
  color: $yellow;
}

/* Identifiers */
identifier {
  color: $red;
}
identifier.type {
  color: $yellow;
}
identifier.constant {
  color: $cyan;
}
identifier.global {
  color: $red;
}
identifier.variable {
  color: $red;
}
identifier.core {
  color: $pink;
}
identifier.decorator,
identifier.function,
identifier.method {
  color: $blue;
}
identifier.property {
  color: $red;
}
identifier.key {
  color: $text_color;
}
identifier.argument {
  color: $red;
}

/* Strings */
string {
  color: $green;
}
string.key {
  color: $green;
}
string-template {
  color: $gray5;
}
string-template.value {
  color: $orange;
}
regex {
  color: $cyan;
}
regex.escaped {
  color: $cyan;
}
cdata {
  color: $text_color;
}

/* Markup */
markup.heading {
  color: $blue;
}
markup.line {
  color: $blue;
}
markup.bold {
  color: $yellow;
  font-weight: bold;
}
markup.italic {
  color: $pink;
  font-style: italic;
}
markup.strikethrough {
  color: $green;
}
markup.list.item {
  color: $red;
}
markup.code {
  color: $gray3;
}
markup.link {
  color: $blue;
}

/* Types */
definition.class class.name,
definition.type type.name,
definition.package package.name,
definition.enum enum.name,
definition.union union.name,
definition.struct struct.name {
  color: $pink;
}

/* Members */
definition.property property.name,
definition.function function.name,
definition.method method.name {
  color: $pink;
}

/* Tags */
tag {
  color: $gray4;
}
tag.name {
  color: $red;
}
tag.framework {
  color: $brown;
}
tag.attribute.name {
  color: $orange;
}
tag.attribute.value {
  color: $green;
}
tag.attribute.value.link {
  color: $blue;
}

/* Styles */
style.at {
  color: $pink;
}
style.selector.element {
  color: $red;
}
style.selector.identifier.id {
  color: $blue;
}
style.selector.identifier.class {
  color: $orange;
}
style.selector.pseudoclass {
  color: $orange;
}
style.selector.pseudoelement {
  color: $orange;
}
style.attribute.name {
  color: $text_color;
}
style.value.number {
  color: $orange;
}
style.value.color.hex {
  color: $cyan;
}
style.value.keyword {
  color: $pink;
}
style.value.color.named {
  color: $blue;
}
style.value.identifier.function {
  color: $cyan;
}

/* Terminal */

terminal.black,
terminal.bright-black {
  color: $bg;
}

terminal.red,
terminal.bright-red {
  color: $red;
}

terminal.green,
terminal.bright-green {
  color: $green;
}

terminal.yellow,
terminal.bright-yellow {
  color: $yellow;
}

terminal.blue,
terminal.bright-blue {
  color: $blue;
}

terminal.magenta,
terminal.bright-magenta {
  color: $pink;
}

terminal.cyan,
terminal.bright-cyan {
  color: $cyan;
}

terminal.white,
terminal.bright-white {
  color: $text_color;
}

/* advancedPHP */

advphp.static.condition {
  color: $pink;
}
advphp.static.processor {
  color: $pink;
}
advphp.static.declaration {
  color: $pink;
}
advphp.static.import {
  color: $pink;
}
advphp.static.constant {
  color: $cyan;
}
advphp.static.wordOperator {
  color: $gray4;
}

advphp.wp.keywords {
  color: $cyan;
}

advphp.curl.keywords {
  color: $cyan;
}

advphp.sql.keywords {
  color: $pink;
}

advphp.operator {
  color: $gray4;
}
advphp.bracket {
  color: $gray4;
}
advphp.delimiter {
  color: $gray4;
}

advphp.identifier.variable.prefix {
  color: $gray4;
}
advphp.identifier.variable.name {
  color: $red;
}
advphp.identifier.variable.this {
  color: $yellow;
}

advphp.identifier.function.keyword {
  color: $pink;
}
advphp.identifier.function.name {
  color: $blue;
}
advphp.identifier.parameter.prefix {
  color: $gray4;
}
advphp.identifier.parameter.name {
  color: $red;
}

advphp.identifier.object.name {
  color: $yellow;
}

advphp.string,
advphp.value.string,
advphp.string.doubleQuote,
advphp.string.singleQuote {
  color: $green;
}
